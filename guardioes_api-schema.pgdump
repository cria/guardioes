--
-- PostgreSQL database dump
--

-- Dumped from database version 13.2
-- Dumped by pg_dump version 13.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: session_touch_from_image(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.session_touch_from_image() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
--      raise notice 'image [ %, % ]', new.record_id, old.record_id;

        update session set last_call = now() where session_id = (select r.session_id from record r where r.record_id = new.record_id);
        return new;
End;
$$;


ALTER FUNCTION public.session_touch_from_image() OWNER TO postgres;

--
-- Name: session_touch_from_record(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.session_touch_from_record() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
--      raise notice 'record [ %, % ]', new.session_id, old.session_id;

        update session set last_call = now() where session_id = new.session_id;
        return new;
End;
$$;


ALTER FUNCTION public.session_touch_from_record() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: image; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.image (
    image_id text NOT NULL,
    record_id text NOT NULL,
    date timestamp with time zone DEFAULT now(),
    number integer NOT NULL,
    data text DEFAULT ''::text NOT NULL,
    format text DEFAULT 'jpg'::text NOT NULL
);


ALTER TABLE public.image OWNER TO postgres;

--
-- Name: COLUMN image.image_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.image.image_id IS 'Chave da imagem.';


--
-- Name: COLUMN image.record_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.image.record_id IS 'Chave do registro.';


--
-- Name: COLUMN image.date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.image.date IS 'Data e hora de envio da imagem.';


--
-- Name: COLUMN image.data; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.image.data IS 'Conteúdo da imagem.';


--
-- Name: COLUMN image.format; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.image.format IS 'Formato da imagem (ex: jpg).';


--
-- Name: record; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.record (
    record_id text NOT NULL,
    session_id text NOT NULL,
    date timestamp with time zone DEFAULT now(),
    country text DEFAULT ''::text,
    stateprovince text DEFAULT ''::text,
    municipality text DEFAULT ''::text,
    locality text DEFAULT ''::text,
    decimallatitude text DEFAULT ''::text,
    decimallongitude text DEFAULT ''::text,
    elevation text DEFAULT ''::text,
    verbatimeventdate text DEFAULT ''::text,
    eventdate text DEFAULT ''::text,
    eventtime text DEFAULT ''::text,
    eventremarks text DEFAULT ''::text,
    taxgrp text DEFAULT ''::text,
    habit text DEFAULT 'nda'::text,
    interaction text DEFAULT 'nda'::text,
    a_family text DEFAULT ''::text,
    a_vernacularname text DEFAULT ''::text,
    a_scientificname text DEFAULT ''::text,
    a_identificationremarks text DEFAULT ''::text,
    p_family text DEFAULT ''::text,
    p_vernacularname text DEFAULT ''::text,
    p_scientificname text DEFAULT ''::text,
    p_identificationremarks text DEFAULT ''::text
);


ALTER TABLE public.record OWNER TO postgres;

--
-- Name: TABLE record; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.record IS 'Registro de interação entre espécies enviado pelo app durante sessão';


--
-- Name: COLUMN record.record_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.record_id IS 'Chave do registro';


--
-- Name: COLUMN record.session_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.session_id IS 'Chave da sessão';


--
-- Name: COLUMN record.date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.date IS 'Data e hora de envio do registro.';


--
-- Name: COLUMN record.country; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.country IS 'País.';


--
-- Name: COLUMN record.stateprovince; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.stateprovince IS 'Estado.';


--
-- Name: COLUMN record.municipality; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.municipality IS 'Município.';


--
-- Name: COLUMN record.locality; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.locality IS 'Localidade.';


--
-- Name: COLUMN record.decimallatitude; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.decimallatitude IS 'Latitude em graus decimais.';


--
-- Name: COLUMN record.decimallongitude; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.decimallongitude IS 'Longitude em graus decimais.';


--
-- Name: COLUMN record.elevation; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.elevation IS 'Elevação em metros.';


--
-- Name: COLUMN record.verbatimeventdate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.verbatimeventdate IS 'Data/hora original da observação.';


--
-- Name: COLUMN record.eventdate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.eventdate IS 'Data da observação (dd/mm/aaaa).';


--
-- Name: COLUMN record.eventtime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.eventtime IS 'Hora da observação.';


--
-- Name: COLUMN record.eventremarks; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.eventremarks IS 'Observações.';


--
-- Name: COLUMN record.taxgrp; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.taxgrp IS 'Tipo de animal de acordo com as definições em def_expertise (key).';


--
-- Name: COLUMN record.habit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.habit IS 'Hábito da planta de acordo com as definições em def_habit.';


--
-- Name: COLUMN record.interaction; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.interaction IS 'Tipo de interação de acordo com as definições em def_interaction.';


--
-- Name: COLUMN record.a_family; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.a_family IS 'Família do animal.';


--
-- Name: COLUMN record.a_vernacularname; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.a_vernacularname IS 'Nome comum do animal.';


--
-- Name: COLUMN record.a_scientificname; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.a_scientificname IS 'Nome científico do animal.';


--
-- Name: COLUMN record.a_identificationremarks; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.a_identificationremarks IS 'Observações sobre a identificação do animal.';


--
-- Name: COLUMN record.p_family; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.p_family IS 'Família da planta.';


--
-- Name: COLUMN record.p_vernacularname; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.p_vernacularname IS 'Nome comum da planta.';


--
-- Name: COLUMN record.p_scientificname; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.p_scientificname IS 'Nome científico da planta.';


--
-- Name: COLUMN record.p_identificationremarks; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.record.p_identificationremarks IS 'Observações sobre a identificação da planta.';


--
-- Name: session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.session (
    session_id text NOT NULL,
    user_id integer NOT NULL,
    date timestamp with time zone DEFAULT now(),
    last_call timestamp with time zone DEFAULT now()
);


ALTER TABLE public.session OWNER TO postgres;

--
-- Name: TABLE session; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.session IS 'Sessão de interação entre app e website';


--
-- Name: COLUMN session.session_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.session.session_id IS 'Chave da sessão';


--
-- Name: COLUMN session.user_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.session.user_id IS 'Chave do usuário';


--
-- Name: COLUMN session.date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.session.date IS 'Data e hora de início';


--
-- Name: COLUMN session.last_call; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.session.last_call IS 'Data e hora da última interação';


--
-- Name: image image_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.image
    ADD CONSTRAINT image_pkey PRIMARY KEY (image_id);


--
-- Name: record record_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.record
    ADD CONSTRAINT record_pkey PRIMARY KEY (record_id);


--
-- Name: session session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.session
    ADD CONSTRAINT session_pkey PRIMARY KEY (session_id);


--
-- Name: image session_touch_from_image; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER session_touch_from_image AFTER INSERT OR UPDATE ON public.image FOR EACH ROW EXECUTE FUNCTION public.session_touch_from_image();


--
-- Name: record session_touch_from_record; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER session_touch_from_record AFTER INSERT OR UPDATE ON public.record FOR EACH ROW EXECUTE FUNCTION public.session_touch_from_record();


--
-- Name: image image_record_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.image
    ADD CONSTRAINT image_record_id_fkey FOREIGN KEY (record_id) REFERENCES public.record(record_id) ON DELETE CASCADE;


--
-- Name: record record_session_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.record
    ADD CONSTRAINT record_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.session(session_id) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

